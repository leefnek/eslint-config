module.exports = {
  plugins: [
    'react',
    'import',
    'promise',
    'jest',
    'jest-dom',
    'storybook',
    'testing-library',
    'no-relative-import-paths',
  ],
  extends: [
    'react-app',
    'plugin:jest-dom/recommended',
    'plugin:jest/recommended',
    'plugin:jest/style',
    'plugin:storybook/csf',
    'plugin:storybook/csf-strict',
    'plugin:testing-library/react',
    'standard',
    'airbnb',
    'prettier',
  ],
  rules: {
    'no-console': 'error',
    'react/boolean-prop-naming': [
      'error',
      {
        propTypeNames: ['bool', 'mutuallyExclusiveTrueProps'],
        rule: '^[$]?(is|has)[A-Z]([A-Za-z0-9]?)+',
      },
    ],
    'react/forbid-component-props': ['error', { forbid: ['style'] }],
    'react/hook-use-state': 'error',
    'react/jsx-handler-names': 'error',
    'react/sort-prop-types': [
      'error',
      {
        ignoreCase: true,
        callbacksLast: true,
        sortShapeProp: true,
      },
    ],
    'react/jsx-sort-props': [
      'error',
      {
        ignoreCase: true,
        callbacksLast: true,
        shorthandFirst: true,
        multiline: 'last',
        reservedFirst: true,
      },
    ],
    'react/jsx-tag-spacing': ['error', { beforeSelfClosing: 'always' }],
    'react/react-in-jsx-scope': 'off',
    'react/function-component-definition': [
      'error',
      {
        namedComponents: 'arrow-function',
        unnamedComponents: 'arrow-function',
      },
    ],
    'import/default': 'error',
    'import/namespace': 'error',
    'import/no-unused-modules': ['error', { unusedExports: true }],
    'import/no-commonjs': 'error',
    'import/no-nodejs-modules': 'error',
    'import/order': [
      'error',
      {
        groups: ['builtin', 'external', 'internal', 'sibling'],
        pathGroups: [
          {
            pattern: 'react',
            group: 'external',
            position: 'before',
          },
        ],
        pathGroupsExcludedImportTypes: ['react'],
        'newlines-between': 'always',
        alphabetize: {
          order: 'asc',
          caseInsensitive: true,
        },
      },
    ],
    'promise/prefer-await-to-then': 'error',
    'promise/prefer-await-to-callbacks': 'error',
    'jest/consistent-test-it': 'error',
    'jest/max-nested-describe': ['error', { max: 2 }],
    'jest/no-conditional-in-test': 'error',
    'jest/no-duplicate-hooks': 'error',
    'jest/no-test-return-statement': 'error',
    'jest/prefer-called-with': 'error',
    'jest/prefer-comparison-matcher': 'error',
    'jest/prefer-hooks-in-order': 'error',
    'jest/prefer-hooks-on-top': 'error',
    'jest/prefer-spy-on': 'error',
    'jest/prefer-to-be': 'error',
    'jest/prefer-to-contain': 'error',
    'jest/prefer-to-have-length': 'error',
    'jest/expect-expect': 'off',
    'jest/no-done-callback': 'off',
    'jest/no-interpolation-in-snapshots': 'off',
    'jest/no-mocks-import': 'off',
    'jest/valid-describe-callback': 'off',
    'jest/valid-expect-in-promise': 'off',
    'testing-library/await-fire-event': 'error',
    'testing-library/no-await-sync-events': 'error',
    'testing-library/no-global-regexp-flag-in-query': 'error',
    'testing-library/no-manual-cleanup': 'error',
    'testing-library/no-render-in-setup': [
      'error',
      { allowTestingFrameworkSetupHook: 'beforeEach' },
    ],
    'testing-library/prefer-user-event': 'error',
    'testing-library/prefer-wait-for': 'error',
    'no-relative-import-paths/no-relative-import-paths': 'error',
  },
  overrides: [
    {
      files: ['**/*.stories.*'],
      rules: {
        'import/no-anonymous-default-export': 'off',
        'import/no-unused-modules': 'off',
        'react/jsx-props-no-spreading': 'off',
        'storybook/prefer-pascal-case': 'error',
      },
    },
    {
      files: ['src/tests/**/*', 'src/setupTests.js'],
      rules: {
        'import/no-extraneous-dependencies': 'off',
      },
    },
  ],
};
